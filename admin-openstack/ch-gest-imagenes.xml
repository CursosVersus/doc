<?xml version="1.0" encoding="utf-8"?>
<chapter xmlns="http://docbook.org/ns/docbook"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
         xml:id="ch-gest-imagenes">
  <title>Gestión de imágenes</title>
  <para>OpenStack utiliza imágenes de sistemas operativos previamente instalados
  para crear las instancias que se ejecutan en los nodos de computación. Estas
  imágenes pueden tener diferentes formatos, pueden ser sistemas operativos
  limpios recién instalados o por contra sistemas con muchas aplicaciones
  completamente configuradas y pueden ser incluso instantáneas
  (<emphasis>snapshots</emphasis>) de instancias que se están ejecutando en
  alguno de los nodos de computación.</para>
  <para>El componente de OpenStack encargado de la gestión de instancias es
  Glance que inicialmente almacena las imágenes en el directorio
  <filename>/var/lib/glance/images</filename>, aunque es posible utilizar
  también un componente de almacenamiento de objetos como OpenStack Swift.</para>
  <section xml:id="sec_glance_formato">
    <title>Formato de Disco y Contenido</title>
    <para>Cuando añadimos una imagen a Glance, necesitamos especificar el
    formato de disco de la maquina virtual y el formato del contenido de éste.</para>
    <section>
      <title>Formato del disco</title>
      <para>Tendremos que dar un formato a nuestra imagen para cuando creemos
      una máquina virtual. Existen muchos tipos de formatos de imagen de disco,
      actualmente podemos utilizar los siguientes en OpenStack (<link 
      xlink:href="http://docs.openstack.org/developer/glance/formats.html">Disk
      and Container Formats</link>):</para> 
      <variablelist>
	<varlistentry>
	  <term><filename>raw</filename></term>
	  <listitem>
	    <para>Formato de imagen de disco no estructurado. Es el formato
	    básico que puede crearse por ejemplo con la aplicación dd, no está
	    optimizado para su utilización en virtualización, pero puede
	    manejarse con herramientas básicas del sistema (dd, parted, fdisk,
	    mount, kpartx, ...)</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><filename>vhd</filename></term>
	  <listitem>
	    <para>Usado por herramientas de virtualización como VMWare, Xen,
	    Microsoft, VirtualBox y otros.</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><filename>vmdk</filename></term>
	  <listitem>
	    <para>Otro formato usado por herramientas de virtualización como por
	    ejemplo VMWare player.</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><filename>vdi</filename></term>
	  <listitem>
	    <para>Formato soportado por VirtualBox y el emulador QEMU</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><filename>iso</filename></term>
	  <listitem>
	    <para>Formato de ficheros o contenido de un dispostivos óptico como
	    un CDROM o DVD.</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><filename>qcow2</filename></term>
	  <listitem>
	    <para>Formato de disco soportado por el emulador QEMU que
	    permite expandir dinámicamente y soporta Copy on Write.</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><filename>aki</filename></term>
	  <listitem>
	    <para>Indica que la imagen guardada en Glance es una Amazon Kernel
	    Image.</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><filename>ari</filename></term>
	  <listitem>
	    <para>Indica que la imagen guardada en Glance es una Amazon Ramdisk
	    Image.</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><filename>ami</filename></term>
	  <listitem>
	    <para>Indica que la imagen guardada en Glance es una Amazon Machine
	    Image.</para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </section>
    <section>
      <title>Formato del contenedor</title>
      <para>El formato del contenedor se refiere a si la imagen de la máquina
      virtual está en un formato de archivo que contiene metadatos.</para> 
      <para>Nota: El contenido de la imagen no es utilizado por Glance o otros
      componentes de Openstack actualmente, así que si no estamos seguros de que
      formato poner, utilizaremos <emphasis>bare</emphasis>.</para>
      <para>Actualmente podemos utilizar uno de los siguientes tipos de formato
      para el formato del contenedor:</para>
      <variablelist>
	<varlistentry>
	  <term>bare</term>
	  <listitem>
	    <para>Esto indica que no existe formato sobre los metadatos de
	    la imagen.</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>ovf</term>
	  <listitem>
	    <para><emphasis>Open Virtualization Format</emphasis>Estándar
	    abierto que están implementando diferentes soluciones de
	    virtualización/cloud.</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>aki</term>
	  <listitem>
	    <para>Indica que la imagen guardada en Glance es una Amazon
	    Kernel Image.</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>ari</term>
	  <listitem>
	    <para>Indica que la imagen guardada en Glance es una Amazon
	    Ramdisk Image.</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>ami</term>
	  <listitem>
	    <para>Indica que la imagen guardada en Glance es una Amazon
	    Machine Image.</para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </section>
  </section>
  <section xml:id="glance_imagenes_internet">
    <title>Imágenes disponibles en Internet</title>
    <para>La forma más sencilla de añadir imágenes a OpenStack es utilizar
    imágenes preparadas por terceros para OpenStack y que están disponibles en
    distintos sitios de Internet. Algunos sistemas operativos, sobre todo
    distintas distribuciones GNU/Linux, además de proporcionar las imágenes ISO
    con el instalador del sistema, proporcionan imágenes de disco preparadas
    para arrancar directamente sobre el cloud, siendo fundamental verificar que
    el formato de disco y contenido son de los soportados por OpenStack.</para>
    <para>Dentro de <link xlink:href="http://www.launchpad.net">launchpad</link>
    existe el proyecto CirrOS que se dedica a desarrollar una distribución 
    GNU/Linux muy ligera orientada a su utilización en la nube y que es ideal
    para pruebas y situaciones en las que se requieran muchas instancias
    sencillas. Para instalar la última imagen de CirrOS en el equipo en el que
    se ejecute glance, basta con descargar la imagen adecuada de <link
    xlink:href="https://launchpad.net/cirros/+download">https://launchpad.net/cirros/+download</link>,
    por ejemplo, podemos descargar una imagen en formato de disco qcow para
    x86_64:</para>
    <para><code>wget
    https://launchpad.net/cirros/trunk/0.3.0/+download/cirros-0.3.0-x86_64-disk.img</code></para>
    <para>y posteriormente agregarla a glance:</para>
    <para><code>glance add name="CirrOS x86_64 limpia" is_public=true
    container_format=bare disk_format=qcow2 &lt; cirros-0.3.0-x86_64-disk.img
    </code></para>
    <variablelist>
      <varlistentry>
	<term><filename>add</filename></term>
	  <listitem>
	    <para>Para añadir una imagen</para>
	  </listitem>
      </varlistentry>
      <varlistentry>
	<term><filename>name</filename></term>
	  <listitem>
	    <para>Nombre con el que se guardará la imagen y que se utilizará
 	    para identificarla, por lo que debe ser suficientemente
	    descriptiva.</para>
	  </listitem>
      </varlistentry>
      <varlistentry>
	<term><filename>is_public</filename></term>
	  <listitem>
	    <para>Parámetro booleano que indica si la imagen será pública o
	    no.</para>
	  </listitem>
      </varlistentry>
      <varlistentry>
	<term><filename>container_format</filename></term>
	  <listitem>
	    <para>Hay que indicar el formato del contenedor</para>
	  </listitem>
      </varlistentry>
      <varlistentry>
	<term><filename>disk_format</filename></term>
	  <listitem>
	    <para>Hay que indicar el formato del disco</para>
	  </listitem>
      </varlistentry>
    </variablelist>
    <para>Dentro de las distribuciones GNU/Linux "convencionales", Ubuntu es la
    que ha hecho un esfuerzo mayor y ha creado un repositorio completo de sus
    sistemas en varios formatos adecuados para utilizar en la nube y que se
    pueden descargar de <link
    xlink:href="http://uec-images.ubuntu.com">Ubuntu Cloud Images</link>,
    basta con elegir una imagen para descargar e instalarla con glance de forma
    análoga a lo que se ha hecho con CirrOS.</para>
    <para>En cualquier caso, por muchas imágenes que tengamos a nuestra
    disposición en Internet, nunca se pueden cubrir todas nuestras necesidades y
    antes o después tendremos la necesidad de crear una instancia a medida, que
    es lo que explicamos en las próximas secciones.</para>
  </section>
  <section xml:id="glance_instalacion_maquinas">
    <title>Procedimiento general de provisión de imágenes</title>
    <para>En secciones posteriores se explicará la forma específica de crear
    imágenes del cloud para una distribución GNU/Linux o para un sistema
    Windows, pero vamos a resumir los pasos generales.</para>
    <para>La instalación debemos hacerla en un equipo con KVM instalado y
    configurado y con un cliente VNC disponible<footnote><para>Podría hacerse
    sin vnc directamente con sdl, pero VNC es más versátil y nos permite por
    ejemplo trabajar en remoto</para></footnote>. Los pasos principales para
    crear una imagen con un sistema son:</para>
    <orderedlist>
      <listitem>
	<para>Crear una imagen de disco con un determinado formato en nuestra
	máquina. Esta imagen se corresponde con el disco duro de la máquina
	virtual. Por ejemplo para crear una imagen de 1 GiB en formato
	qcow2:</para>
	<para><code>kvm-img create -f qcow2 Nombre-imagen.img 1G</code></para>
      </listitem>
      <listitem>
	<para>Arrancar la máquina virtual con KVM incluyendo la iso con el
	instalador del SO. Esto levantará una conexión VNC a las que nos
	tendremos que conectar para hacer la instalación. Por ejemplo:</para>
	<para><code>kvm -m 512 -cdrom instalador-SO.iso -drive
	file=Nombre-imagen.img,if=scsi,index=0 -boot d -net nic -net user
	-nographic  -vnc</code></para>
      </listitem>
      <listitem><para>Conectamos mediante VNC a la máquina virtual y terminar la
      instalación</para></listitem>
      <listitem><para>Copiar la imagen al nodo de glance y añadirla a la base de
      datos, especificando si la imagen será pública o no y el formato del
      contenedor:</para>
      <para><code>glance add name="Debian Squeeze 6.0.5" is_public=true
      container_format=ovf disk_format=qcow2 &lt;
      Nombre-imagen.img</code></para>
      </listitem>
    </orderedlist>
  </section>
  <section>
    <title>Creación de imágenes GNU/Linux</title>
    <para>En primer lugar creamos un fichero para la imagen del sistema (en este
    caso se ha optado por formato raw):</para>
    <para><code>kvm-img create -f raw Debian6.0.5.img 1G</code></para>
    <para>Iniciamos una máquina virtual con KVM con la ISO de instalación
    descargada anteriormente (en este caso la versión netinst de Debian
    stable), para comenzar instalación y conectarnos por VNC:</para>
    <para><code>kvm -m 512 -cdrom debian-6.0.5-amd64-netinst.iso -drive
    file=debian6.0.5.img,if=scsi,index=0 -boot d -net nic -net user -nographic
    -vnc :0</code></para>
    <para>Durante la instalación creamos una sola partición que ocupe todo el
    disco virtual y la asociamos a /. No creamos partición de swap.</para>
    <para>Si fuera necesario volver a iniciar el sistema, pero en este caso,
    desde el fichero con el disco duro virtual, ejecutaríamos la siguiente
    instrucción:</para>
    <para><code>kvm -m 512 -drive file=debian6.0.5.img,if=scsi,index=0,boot=on
    -boot c -net nic -net user -nographic -vnc :0</code></para>
    <para>Durante la instalación del sistema, es imprescindible instalar el
    servidor ssh, ya que será el método utilizado por defecto para acceder a las
    instancias del cloud una vez que estén iniciadas.</para>
    <para>Una vez terminada la instalación del sistema, se copia el fichero con
    la imagen del nuevo sistema al equipo en el que se ejecuta glance y se
    agrega a las imágenes disponibles de la siguiente manera:</para>
    <para><code>glance add name="Debian Squeeze 6.0.5" is_public=true
    container_format=ovf disk_format=raw &lt; Debian6.0.5.img</code></para>
  </section>
  <section>
    <title>Creación de imágenes Windows</title>
    <para>Como en cualquier otro caso, creamos un fichero para la imagen del
    sistema (en este caso se ha optado por formato qcow2):</para>
    <para><code>kvm-img create -f qcow2 win7.qcow2 10G</code></para>
    <para>En el caso de instalar un sistema Windows 7 el tamaño mínimo del disco
    debe ser de 7 GB para poder hacer la instalación, aunque es recomendable al
    menos 10.</para>
    <para>Las instancias de OpenStack con KVM se inician utilizando dispositivos
    virtuales virtio para los discos duros y las interfaces de red. Los 
    sistemas GNU/Linux los reconocen sin problemas ya que los controladores de
    dispositivos virtio están incluidos en el kérnel linux, pero los sistemas
    Windows no incluyen soporte nativo para esos controladores, por lo que
    debemos crear la imagen con los controladores virtio incorporados. Para
    ello, nos descargamos previamente los <link
    xlink:href="http://web.archive.org/web/20110501124422/http://alt.fedoraproject.org/pub/alt/virtio-win/latest/images/bin/virtio-win-1.1.16.vfd">controladores
    virtio en formato vfd</link> y arrancamos la máquina virtual con la imagen
    de disco duro, los controladores virtio en una
    <emphasis>disquetera</emphasis> y la iso del instalador del sistema
    windows:</para>
    <para><code>kvm -m 1024 -cdrom Windows7.iso -drive
    file=win7.img,if=virtio,boot=on -fda virtio-win-1.1.16.vfd -boot d
    -nographic -vnc :0</code></para>
    <para>Comenzamos la instalación del sistema Windows a través de la conexión
    VNC y cuando tengamos que seleccionar el disco duro para el sistema nos
    encontraremos con que no existe ninguno, entonces deberemos de hacer click
    en "Cargar controladores" en el botón de la izquierda y cargar los
    controladores de dispositivos virtio desde A:\amd64\win7.</para> 
    <para>Una vez acabada la instalación y reiniciado el sistema windows, es
    necesario activar RDP:</para>
    <itemizedlist>
      <listitem><para>Panel de Control &gt; Sistema &gt; Configuración avanzada
      del sistema &gt; Acceso Remoto</para></listitem>
      <listitem><para>Seleccionar "Permitir que las conexiones desde equipos que
      se ejecuten en cualquier version de escritorio remoto"</para></listitem>
      <listitem><para>Por defecto sólo el administrador tiene acceso así que
      después haremos click en en "Seleccionar usuarios remotos" y agregaremos
      el nombre de los usuarios con el que se van a querer conectar desde las
      otras máquinas.</para></listitem>
    </itemizedlist>
    <para>Si fuera necesario realizar algún cambio después de la instalación,
    arrancaríamos la máquina virtual de la siguiente manera:</para>
    <para><code>kvm -m 1024 -drive file=win7.img,if=virtio,index=0,boot=on -boot c -net nic -net user -nographic -vnc :0</code></para>
    <para>Por último, transferimos la imagen del disco con el sistema windows al
    equipo en el que se encuentra Glance y la añadimos de la misma forma que las
    otras imágenes:</para>
    <para><code>glance add name="Windows 7 Profesional 64bits" is_public=true
    container_format=bare disk_format=raw <  win7.img</code></para>
  </section>
  <section>
    <title>Amazon Machine Images</title>
    <para>Amazon desarrolló para su sistema EC2 un formato propio de imágenes,
    del que existen un gran número de imágenes ya realizadas y que puede
    interesarnos utilizar en algunos casos concretos. Amazon EC2 utiliza Xen
    como sistema de virtualización, que tiene la peculiaridad de que la
    máquina virtual que se levanta no tiene kérnel (ni initrd), sino que es el
    dominio principal (el equipo anfitrión) el que debe seleccionar un kérnel
    (y en su caso un initrd) y lanzar una máquina virtual pasándole el núcleo,
    esto hace que las imágenes de Amazon EC2 se compongan realmente de 3
    imágenes: Una imagen para el kérnel, una imagen para el initrd y una
    imagen de disco con el sistema.</para>
    <para>Los pasos que hay que realizar para agregar una Imagen de Amazon a
    OpenStack son los siguientes:</para>
    <itemizedlist>
      <listitem><para>Descargaremos el archivo que incluye las images ami, ari
      y aki y procederemos a subirlas a glance.</para>
      <para><code>wget
      https://launchpad.net/cirros/trunk/0.3.0/+download/cirros-0.3.0-x86_64-uec.tar.gz</code></para></listitem>
      <listitem><para>Descomprimimos el archivo que contiene 3
      ficheros:</para>
      <para><code>tar xvzf cirros-0.3.0-x86_64-uec.tar.gz</code></para>
      <para>cirros-0.3.0-x86_64-blank.img, cirros-0.3.0-x86_64-initrd,
      cirros-0.3.0-x86_64-vmlinuz</para>
      </listitem>
      <listitem><para>Subimos las imágenes a glance, teniendo en cuenta que la
      imagen con el sistema debe ser la última en subirse, ya que requiere que
      estén previamente disponibles en glance la imagen con el kérnel y la
      imagen con el initrd.</para>
      <para><code>glance add disk_format=aki container_format=aki
      name="cirros-0.3.0-x86_64-vmlinuz" &lt;
      cirros-0.3.0-x86_64-vmlinuz</code></para>
      <para><code>glance add disk_format=ari container_format=ari
      name="cirros-0.3.0-x86_64-initrd" &lt;
      cirros-0.3.0-x86_64-initrd</code></para>
      <para><code>glance add disk_format=ami container_format=ami
      name="cirros-ami-img 64bits - javi"
      kernel_id=cdbd8865-a088-4bb6-ada2-f3bca6b13820
      ramdisk_id=48fadc60-97a2-4250-bbd2-69ca298a94b9 &lt;
      cirros-0.3.0-x86_64-blank.img
      </code></para>
      <para>Donde los identificadores del kérnel y el initrd son los que ha
      asociado en los pasos anteriores el propio Glance.</para>
      </listitem>
    </itemizedlist>
    <para>Obviamente, las imágenes del kérnel e initrd pueden utilizarse
    para diferentes imágenes de disco, siempre y cuando sean versiones
    adecuadas para el sistema que se va a utilizar posteriormente.</para>
  </section>


      <!-- Imagen de Snapshot -->

<!-- Crear una imagen de una instancia corriendo. -->

<!-- Primero necesitamos el ID de la máquina que vamos a hacer un Snapshot, para esto necesitaremos sacar un listado de las máquinas en funcionamiento. -->

<!-- nova list -->

<!-- Nota: Los snapshots se hacen de máquinas activas. -->

<!-- Nos fijamos en el ID de la maquina de la que queramos crear una imagen y -->

<!-- nova image-create < ID > NombreNuevaMaquina -->

<!-- Ej: nova image-create 9dccd6ba-d19a-494a-a110-fd003d453616  "Snapshot de 3" -->

<!-- Comprobaremos que se ha creado la imagen, con el siguiente comando: -->

<!-- nova image-list -->

<!-- Deberemos esperar que pase de “SAVING” a “ACTIVE”, cuando esto ocurra veremos que el Snapshot se ha creado correctamente. -->

<!-- Al hacer el snapshot, por defecto la imagen se crea como privada, para cambiar este parámetro deberemos de utilizar glance update -->

<!-- glance update < ID > is_public=true -->

<!-- Una vez terminado este proceso ya podremos ponernos a lanzar instancias de la Snapshot como si de una imagen se tratara. -->

</chapter>
